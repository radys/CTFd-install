image: docker:latest

variables:
  DOCKER_TLS_CERTDIR: "/certs"

services:
- docker:dind

before_script:
- docker info
- apk update
- apk upgrade
- apk add curl jq git

build:
  stage: build
  script:
    - export CTFD=$(curl -sL https://api.github.com/repos/CTFd/CTFd/releases/latest | jq -r ".tag_name")
    - 'echo "Current CTFd release: $CTFD"'

    # Login docker 
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    # If version exists than false
    - docker pull "$CI_REGISTRY_IMAGE:$CTFD" || true
    - export SKIP_BUILD=$(docker image inspect "$CI_REGISTRY_IMAGE:$CTFD" >/dev/null 2>&1 && echo yes || echo no)
    - \[ "$SKIP_BUILD" = "yes" \] && exit 0

    # Fast building with cached latest image
    - docker pull "$CI_REGISTRY_IMAGE:latest" || true
    
    # Captcha for CTFd
    - 'echo "Captcha for CTFd"'
    - git clone https://github.com/tamuctf/ctfd-recaptcha-plugin.git CTFd/plugins/ctfd-recaptcha-plugin
    #- echo "pip install -r CTFd/plugins/ctfd-recaptcha-plugin/requirements.txt" >> prepare.sh

    # VPN plugin - Kostej, Bodik
    - 'echo "VPN plugin - Kostej, Bodik"'
    - git clone https://gitlab.flab.cesnet.cz/kostej/ctfd_ovpn.git CTFd/plugins/ctfd_ovpn
    #- echo "pip install -r CTFd/plugins/ctfd_ovpn/requirements.txt" >> prepare.sh
    - sed -i '/^WORKDIR.*/a RUN chown -R 1001:1001 \/var\/lib\/ctfd_ovpn' Dockerfile
    - sed -i '/^WORKDIR.*/a RUN mkdir -P \/var\/lib\/ctfd_ovpn' Dockerfile
    - sed -i '/^WORKDIR.*/a RUN \/opt\/CTFd\/CTFd\/plugins\/ctfd_ovpn\/initialize.sh' Dockerfile
    - sed -i '/^WORKDIR.*/a RUN ls -al \/opt\/CTFd\/CTFd\/plugins\/' Dockerfile
    - cat Dockerfile

    # Build and push CTFd
    - 'echo "Build and push CTFd"'
    - docker build --tag "$CI_REGISTRY_IMAGE:latest" --tag="$CI_REGISTRY_IMAGE:$CTFD" .
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:$CTFD"

    # Build and push CTFd honeypot
    - 'echo "Build and push CTFd honeypot"'
    - curl https://raw.githubusercontent.com/radys/CTFd-install/main/honeypot.patch | git apply -v
    - docker build --tag="$CI_REGISTRY_IMAGE:honeypot" --tag="$CI_REGISTRY_IMAGE:honeypot-$CTFD" .
    - docker push "$CI_REGISTRY_IMAGE:honeypot"
    - docker push "$CI_REGISTRY_IMAGE:honeypot-$CTFD"

#build:
#  only:
#    - master
#  before_script:
#    - docker login registry.gitlab.com -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
